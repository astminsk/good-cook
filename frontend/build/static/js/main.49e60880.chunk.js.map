{"version":3,"sources":["components/Recipe.js","redux/constants/recipeConstants.js","screens/HomeScreen.js","redux/actions/recipeActions.js","screens/RecipeScreen.js","screens/ContactsScreen.js","components/Navbar.js","components/Backdrop.js","components/SideDrawer.js","App.js","reportWebVitals.js","redux/store.js","redux/reducers/recipeReducers.js","index.js"],"names":["Recipe","imageUrl","name","ingredients","description","time","recipeId","className","src","alt","to","GET_RECIPES_REQUEST","GET_RECIPES_SUCCESS","GET_RECIPES_FAIL","GET_RECIPE_DETAILS_REQUEST","GET_RECIPE_DETAILS_SUCCESS","GET_RECIPE_DETAILS_FAIL","GET_RECIPE_DETAILS_RESET","HomeScreen","dispatch","useDispatch","getRecipes","useSelector","state","recipes","loading","error","useEffect","a","type","actionTypes","axios","get","data","payload","response","message","map","recipe","_id","RecipeScreen","match","recipeDetails","getRecipeDetails","id","params","ContactsScreen","Navbar","click","onClick","Backdrop","show","SideDrawer","sideDrawerClass","push","join","App","useState","sideToggle","setSideToggle","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49e60880.chunk.js","sourcesContent":["import \"./Recipe.css\";\nimport { Link } from \"react-router-dom\";\n \nconst Recipe = ({imageUrl, name, ingredients, description, time, recipeId}) => {\n  return (\n    <div className=\"recipe\">\n      <img \n      src={imageUrl}\n       alt={name} />\n\n      <div className=\"recipe__info\">\n        <p className=\"info__name\">{name}</p>\n        <p className=\"info__ingredients\">{ingredients}</p>\n\n        <p className=\"info__description\">{description}</p>\n\n        <p className=\"info__time\"><b>{time}</b> минут</p>\n\n        <Link to={`/recipe/${recipeId}`} className=\"info__button\">\n          Показать\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Recipe;","export const GET_RECIPES_REQUEST = \"GET_RECIPES_REQUEST\";\nexport const GET_RECIPES_SUCCESS = \"GET_RECIPES_SUCCESS\";\nexport const GET_RECIPES_FAIL = \"GET_RECIPES_FAIL\";\n\nexport const GET_RECIPE_DETAILS_REQUEST = \"GET_RECIPE_DETAILS_REQUEST\";\nexport const GET_RECIPE_DETAILS_SUCCESS = \"GET_RECIPE_DETAILS_SUCCESS\";\nexport const GET_RECIPE_DETAILS_FAIL = \"GET_RECIPE_DETAILS_FAIL\";\nexport const GET_RECIPE_DETAILS_RESET = \"GET_RECIPE_DETAILS_RESET\";","import './HomeScreen.css';\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\n\n// Components\nimport Recipe from \"../components/Recipe\";\n\n// Actions\nimport {getRecipes as listRecipes } from '../redux/actions/recipeActions';\n\nconst HomeScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const getRecipes = useSelector(state => state.getRecipes);\n    const { recipes, loading, error } = getRecipes;\n  \n    useEffect(() => {\n      dispatch(listRecipes());\n  \n    }, [dispatch]);\n\n    return (\n        <div className=\"homescreen\">\n            <h2 className=\"homescreen__title\">Кулинарные рецепты</h2>\n            <div className=\"homescreen__recipes\">\n            {loading ? (\n          <h2>Загрузка...</h2>\n        ) : error ? (\n          <h2>{error}</h2>\n        ) : (\n          recipes.map((recipe) => (\n            <Recipe\n              key={recipe._id}\n              name={recipe.name} \n              ingredients={recipe.ingredients}\n              description={recipe.description}\n              time={recipe.time}\n              imageUrl={recipe.imageUrl}\n              recipeId={recipe._id}\n            />\n          ))\n        )}\n            </div>\n        </div>\n    );\n};\n\nexport default HomeScreen;\n","import * as actionTypes from \"../constants/recipeConstants\";\nimport axios from \"axios\";\n\nexport const getRecipes = () => async (dispatch) => {\n    try {\n      dispatch({ type: actionTypes.GET_RECIPES_REQUEST });\n  \n      const { data } = await axios.get(\"/api/recipes\");\n  \n      dispatch({\n        type: actionTypes.GET_RECIPES_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: actionTypes.GET_RECIPES_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\n  export const getRecipeDetails = (id) => async (dispatch) => {\n    try {\n      dispatch({ type: actionTypes.GET_RECIPE_DETAILS_REQUEST });\n  \n      const { data } = await axios.get(`/api/recipes/${id}`);\n  \n      dispatch({\n        type: actionTypes.GET_RECIPE_DETAILS_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: actionTypes.GET_RECIPE_DETAILS_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n  \n  export const removeRecipeDetails = () => (dispatch) => {\n    dispatch({ type: actionTypes.GET_RECIPE_DETAILS_RESET });\n  };","import './RecipeScreen.css'\nimport { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\n\n// Actions\nimport { getRecipeDetails } from '../redux/actions/recipeActions';\n\nconst RecipeScreen = ({match}) => {\n\n  const dispatch = useDispatch();\n\n  const recipeDetails = useSelector((state) => state.getRecipeDetails);\n  const { loading, error, recipe } = recipeDetails;\n\n  useEffect(() => {\n    if (recipe && match.params.id !== recipe._id) {\n      dispatch(getRecipeDetails(match.params.id));\n    }\n  }, [dispatch, match, recipe]);\n\n\n    return (\n        <div className=\"recipescreen\">\n            {loading ? (\n        <h2>Loading...</h2>\n      ) : error ? (\n        <h2>{error}</h2>\n      ) : (\n        <>\n            <div className=\"recipescreen__left\">\n                <div className=\"left__image\">\n                    <img src={recipe.imageUrl} alt={recipe.name}/>\n                </div>\n                <div className=\"left__info\">\n                    <p className=\"left__name\">{recipe.name}</p>\n                    <p>{recipe.ingredients}</p>\n                    <p>{recipe.description}</p>\n                </div>\n            </div>\n            <div className=\"recipescreen__right\">\n                <div className=\"right__info\">\n                    <p>\n                        Время приготовления: <span>{recipe.time} минут</span>\n                    </p>\n                </div>\n            </div>\n            </>\n      )}\n    </div>\n    )\n}\n\nexport default RecipeScreen\n","import './ContactsScreen.css';\n\nconst ContactsScreen = () => {\n\n\n    return (\n        <div className=\"contactsscreen\">\n            <h2>Пишите: letsgoodcook@gmail.com</h2>\n        </div>\n    );\n};\n\nexport default ContactsScreen;","import './Navbar.css';\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = ({click}) => {\n    return (\n        <nav className=\"navbar\">\n            <div className=\"navbar__logo\">\n                <h2>Кулинарные рецепты</h2>\n            </div>\n\n            <ul className=\"navbar__links\">\n                <li>\n                    <Link to=\"/\" className=\"recipes__link\">\n                        Рецепты\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/contacts\" className=\"contacts__link\">\n                        Контакты\n                    </Link>\n                </li>\n            </ul>\n\n            <div className=\"hamburger__menu\" onClick={click}>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar\n","import \"./Backdrop.css\";\n\nconst Backdrop = ({ click, show }) => {\n  return show && <div className=\"backdrop\" onClick={click}></div>;\n};\n\nexport default Backdrop;","\nimport \"./SideDrawer.css\";\nimport { Link } from \"react-router-dom\";\n\nconst SideDrawer = ({ show, click }) => {\n  const sideDrawerClass = [\"sidedrawer\"];\n\n  if (show) {\n    sideDrawerClass.push(\"show\");\n  }\n\n\n  return (\n    <div className={sideDrawerClass.join(\" \")}>\n      <ul className=\"sidedrawer__links\" onClick={click}>\n        <li>\n          <Link to=\"/\">Рецепты</Link>\n        </li>\n        <li>\n          <Link to=\"/contacts\">Контакты</Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default SideDrawer;","import './App.css';\nimport {useState} from 'react';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\n// Screens\nimport HomeScreen from './screens/HomeScreen';\nimport RecipeScreen from './screens/RecipeScreen';\nimport ContactsScreen from './screens/ContactsScreen';\n\n// Components\nimport Navbar from \"./components/Navbar\";\nimport Backdrop from './components/Backdrop';\nimport SideDrawer from './components/SideDrawer';\n\n\nfunction App() {\n  const [sideToggle, setSideToggle] = useState(false);\n\n  return (\n    <Router>\n      <Navbar click={() => setSideToggle(true)} />\n      <SideDrawer show={sideToggle} click={() => setSideToggle(false)} />\n      <Backdrop show={sideToggle} click={() => setSideToggle(false)} />\n      <main>\n        <Switch>\n          <Route exact path=\"/\" component={HomeScreen}/>\n          <Route exact path=\"/recipe/:id\" component={RecipeScreen}/>\n          <Route exact path=\"/contacts\" component={ContactsScreen}/>\n        </Switch>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\n// Reducers\nimport {\n  getRecipeDetailsReducer, \n  getRecipesReducer,\n } from \"./reducers/recipeReducers\";\n\nconst reducer = combineReducers({\n  getRecipes: getRecipesReducer,\n  getRecipeDetails: getRecipeDetailsReducer,\n});\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(...middleware))\n  );\n  \n  export default store;","import * as actionTypes from \"../constants/recipeConstants\";\n\nexport const getRecipesReducer = (state = { recipes: [] }, action) => {\n  switch (action.type) {\n    case actionTypes.GET_RECIPES_REQUEST:\n      return {\n        loading: true,\n        recipes: [],\n      };\n    case actionTypes.GET_RECIPES_SUCCESS:\n      return {\n        recipes: action.payload,\n        loading: false,\n      };\n    case actionTypes.GET_RECIPES_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const getRecipeDetailsReducer = (state = { recipe: {} }, action) => {\n  switch (action.type) {\n    case actionTypes.GET_RECIPE_DETAILS_REQUEST:\n      return {\n        loading: true,\n      };\n    case actionTypes.GET_RECIPE_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        recipe: action.payload,\n      };\n    case actionTypes.GET_RECIPE_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case actionTypes.GET_RECIPE_DETAILS_RESET:\n      return {\n        recipe: {},\n      };\n    default:\n      return state;\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}